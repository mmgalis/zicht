import{bl as p,bq as l,br as m,P as n,g as d,e,y as i,ap as u,a as c}from"./index-u6TDeZ-R.js";import{A as h}from"./I3SMeshView3D-CfgBq3tw.js";import{l as g}from"./LayerView3D-BIrE-IG1.js";import{y}from"./LayerView-CtkN7sNf.js";import"./Transform-CVkEfk6H.js";import"./RenderTexture-D1I2iMjF.js";import"./I3SOverrides-Kd1xxGpN.js";import"./I3SNode-CTPmu5y3.js";import"./meshFeatureSet-DfrvS-in.js";import"./FeatureLayerView3D-zMxcv-8F.js";import"./FeatureLayerViewBase3D-CvWwOJg4.js";import"./HeatmapDensity.glsl-CO0gFTUv.js";import"./timeSupport-3Bm0iLv3.js";import"./projectExtentUtils-yH_PQkjd.js";import"./queryForSymbologySnapping-Cbfqcjta.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-Buw1MHRu.js";import"./optimizedFeatureQueryEngineAdapter-DbCUbNCA.js";import"./PooledRBush-Ba-Lgyl5.js";import"./quickselect-BGtM7Y3G.js";import"./QueryEngine-Brb5xDyE.js";import"./WhereClause-DnaoTW55.js";import"./TimeOnly-C0fvvbQH.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-oCZSraM9.js";import"./utils-B9PUnwHW.js";import"./ClassBreaksDefinition-OghHROTY.js";import"./FeatureStore-C-VsRzoH.js";import"./BoundsStore-BtU4-x-Y.js";import"./EventedSet-BbrcHTkB.js";import"./RefreshableLayerView-BjptNu7A.js";import"./SceneModification--lEc_c9g.js";import"./SceneLayerWorker-05HmScES.js";import"./makeScheduleFunction-CggzEh3c.js";const f=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!p("disable-feature:im-shading"),this.drapeTargetType=l.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return m(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),n),"modifications")}};e([i()],t.prototype,"layer",void 0),e([i()],t.prototype,"i3slayer",null),e([i(u)],t.prototype,"updatingProgress",void 0),e([i()],t.prototype,"updatingProgressValue",null),e([i()],t.prototype,"lodFactor",null),e([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),e([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=e([c("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const Z=t;export{Z as default};
