import{b7 as b,b8 as d,z as h,b9 as y,ba as m,bb as S,bc as N,bd as D,be as g,bf as M,bg as w,aj as F}from"./index-Mg4rAR0g.js";const T=()=>F.getLogger("esri.rest.support.meshFeatureSet");function G(e,t,s){const n=s.features;s.features=[],delete s.geometryType;const r=b.fromJSON(s);if(r.geometryType="mesh",!s.assetMaps)return r;const a=x(t,s.assetMaps),i=e.sourceSpatialReference??d.WGS84,l=s.globalIdFieldName,{outFields:o}=e,f=o!=null&&o.length>0?I(o.includes("*")?null:new Set(o)):()=>({});for(const u of n){const c=L(u,l,i,t,a);r.features.push(new h({geometry:c,attributes:f(u)}))}return r}function I(e){return({attributes:t})=>{if(!t)return{};if(!e)return t;for(const s in t)e.has(s)||delete t[s];return t}}function L(e,t,s,n,r){const a=e.attributes[t],i=r.get(a);if(i==null||!e.geometry)return null;const l=O(e,s,n),o=y.fromJSON(e.geometry);o.spatialReference=s;const f=$(e.attributes,n),u=s.isGeographic?"local":"georeferenced",c=A(i);return c?m.createWithExternalSource(l,c,{extent:o,transform:f,vertexSpace:u}):m.createIncomplete(l,{extent:o,transform:f,vertexSpace:u})}function O({attributes:e},t,{transformFieldRoles:s}){const n=e[s.originX],r=e[s.originY],a=e[s.originZ];return new S({x:n,y:r,z:a,spatialReference:t})}function $(e,{transformFieldRoles:t}){return new N({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}var p;function x(e,t){const s=new Map;for(const n of t){const r=n.parentGlobalId;if(r==null)continue;const a=n.assetName,i=n.assetType,l=n.assetHash,o=n.assetURL,f=n.conversionStatus,u=n.seqNo,c=D(i,e.supportedFormats);if(!c){T().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const E=g(s,r,()=>({files:new Map}));g(E.files,a,()=>({name:a,type:i,mimeType:c,status:P(f),parts:[]})).parts[u]={hash:l,url:o}}return s}function A(e){const t=Array.from(e.files.values()),s=new Array;for(const n of t){if(n.status!==p.COMPLETED)return null;const r=new Array;for(const a of n.parts){if(!a)return null;r.push(new M(a.url,a.hash))}s.push(new w(n.name,n.mimeType,r))}return s}function P(e){switch(e){case"COMPLETED":case"SUBMITTED":return p.COMPLETED;case"INPROGRESS":return p.PENDING;default:return p.FAILED}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(p||(p={}));export{x as assetMapFromAssetMapsJSON,L as extractMesh,G as meshFeatureSetFromJSON};
